% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_sig.R
\name{add_sig}
\alias{add_sig}
\title{Add Significant Test Results}
\usage{
add_sig(object, ..., standardized = FALSE, na_str = "", use = "pvalue")
}
\arguments{
\item{object}{A \linkS4class{lavaan} object.}

\item{...}{Optional arguments to be passed to
\code{\link[lavaan:parameterEstimates]{lavaan::parameterEstimates()}} or
\code{\link[lavaan:standardizedSolution]{lavaan::standardizedSolution()}}.}

\item{standardized}{Whether standardized solution
is needed. If \code{TRUE}, \code{\link[lavaan:standardizedSolution]{lavaan::standardizedSolution()}}
will be called. If \code{FALSE}, the default,
\code{\link[lavaan:parameterEstimates]{lavaan::parameterEstimates()}} will be called.}

\item{na_str}{The string to be used for parameters
with no significant tests. For example, fixed
parameters. Default is \code{""}.}

\item{use}{A character vector of one or two
elements. If one of them is \code{"pvalue"},
\emph{p}-values will be used. If one of them is
\code{"ci"}, confidence intervals will be used.
Can use both by \code{c("pvalue", "ci")}.}
}
\value{
The output of \code{\link[lavaan:parameterEstimates]{lavaan::parameterEstimates()}} or
\code{\link[lavaan:standardizedSolution]{lavaan::standardizedSolution()}}, with one or two columns
inserted after the parameter estimates to denote the
significant test results.
}
\description{
Insert columns to denote whether a
parameter is significant.
}
\details{
The function calls \code{\link[lavaan:parameterEstimates]{lavaan::parameterEstimates()}} or
\code{\link[lavaan:standardizedSolution]{lavaan::standardizedSolution()}} and check the columns
\code{pvalue} and/or \code{ci.lower} and \code{ci.upper} and
then insert columns to denote for each parameter estimate
whether it is significant.
}
\examples{

library(lavaan)
set.seed(5478374)
n <- 50
x <- runif(n) - .5
m <- .40 * x + rnorm(n, 0, sqrt(1 - .40))
y <- .30 * m + rnorm(n, 0, sqrt(1 - .30))
dat <- data.frame(x = x, y = y, m = m)
model <-
'
m ~ a*x
y ~ b*m
ab := a*b
'
fit <- sem(model, data = dat, fixed.x = FALSE)

add_sig(fit)
add_sig(fit, standardized = TRUE)
add_sig(fit, use = "ci")
add_sig(fit, standardized = TRUE, use = "ci")
add_sig(fit, standardized = TRUE, use = c("ci", "pvalue"))

}
\author{
Shu Fai Cheung (shufai.cheung@gmail.com)
}
